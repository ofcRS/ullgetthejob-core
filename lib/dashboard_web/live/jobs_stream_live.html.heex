<div class="max-w-screen-2xl mx-auto p-6 bg-gray-100">
  <!-- Header -->
  <div class="mb-8">
    <div class="flex justify-between items-start">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">
          üöÄ Real-time Job Stream
        </h1>
        <p class="text-gray-600">
          Demonstrating Elixir's concurrent fetching power with rate limiting
        </p>
      </div>
      <div class="flex items-center gap-2 bg-white px-4 py-2 rounded-lg shadow">
        <.icon name="hero-eye" class="w-5 h-5 text-blue-600" />
        <span class="text-sm font-medium text-gray-700">
          {@viewer_count} {if @viewer_count == 1, do: "viewer", else: "viewers"}
        </span>
      </div>
    </div>
  </div>
  
<!-- Stats Dashboard -->
  <div class="grid grid-cols-1 md:grid-cols-5 gap-4 mb-8">
    <div class="bg-white rounded-lg shadow p-6">
      <div class="text-sm font-medium text-gray-500">Current RPS</div>
      <div class="mt-1 text-3xl font-semibold text-green-600">
        {@stats.current_rps}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow p-6">
      <div class="text-sm font-medium text-gray-500">Total Fetched</div>
      <div class="mt-1 text-3xl font-semibold text-blue-600">
        {@stats.total_fetched}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow p-6">
      <div class="text-sm font-medium text-gray-500">Fetch Count</div>
      <div class="mt-1 text-3xl font-semibold text-purple-600">
        {@stats.fetch_count}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow p-6">
      <div class="text-sm font-medium text-gray-500">Rate Tokens</div>
      <div class="mt-1 text-3xl font-semibold text-orange-600">
        {Map.get(@rate_limiter_stats, :tokens, 0)}
      </div>
      <div class="text-xs text-gray-500 mt-1">
        / {Map.get(@rate_limiter_stats, :capacity, 0)}
      </div>
    </div>

    <div class="bg-white rounded-lg shadow p-6">
      <div class="text-sm font-medium text-gray-500">Uptime</div>
      <div class="mt-1 text-3xl font-semibold text-gray-700">
        {format_elapsed(@elapsed_seconds)}
      </div>
    </div>
  </div>
  
<!-- Controls -->
  <div class="flex flex-wrap gap-4 mb-6">
    <button
      phx-click="fetch_now"
      class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition"
    >
      Fetch Now!
    </button>

    <button
      phx-click="clear_jobs"
      class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition"
    >
      Clear Jobs
    </button>

    <button
      phx-click="toggle_scroll"
      class={[
        "px-4 py-2 rounded-lg transition",
        @auto_scroll && "bg-green-600 text-white hover:bg-green-700",
        !@auto_scroll && "bg-gray-300 text-gray-700 hover:bg-gray-400"
      ]}
    >
      Auto-scroll: {if @auto_scroll, do: "ON", else: "OFF"}
    </button>

    <%= if MapSet.size(@selected_jobs) > 0 do %>
      <div class="flex items-center gap-2 ml-auto">
        <span class="text-sm font-medium text-gray-700">
          {MapSet.size(@selected_jobs)} selected
        </span>
        <button
          phx-click="apply_to_selected"
          class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition"
        >
          <.icon name="hero-paper-airplane" class="w-4 h-4 inline mr-1" /> Customize CV & Apply
        </button>
        <button
          phx-click="clear_selection"
          class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition"
        >
          Clear Selection
        </button>
      </div>
    <% else %>
      <button
        phx-click="select_all"
        class="px-4 py-2 bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200 transition ml-auto"
      >
        Select All
      </button>
    <% end %>
  </div>
  
<!-- Status indicator -->
  <div class="mb-4">
    <%= if @status == :fetching do %>
      <div class="flex items-center text-blue-600">
        <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2"></div>
        Fetching jobs concurrently...
      </div>
    <% else %>
      <div class="text-gray-500">
        Waiting for next fetch...
      </div>
    <% end %>
  </div>
  
<!-- Filters -->
  <div class="bg-white rounded-lg shadow p-6 mb-6">
    <div class="flex items-center justify-between mb-4">
      <h3 class="text-lg font-semibold text-gray-900">
        <.icon name="hero-funnel" class="w-5 h-5 inline-block mr-2" /> Filter Jobs
      </h3>
      <button
        phx-click="clear_filters"
        class="text-sm text-blue-600 hover:text-blue-800 font-medium"
      >
        Clear All
      </button>
    </div>

    <form phx-change="filter" class="grid grid-cols-1 md:grid-cols-3 gap-4">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">
          Job Title
        </label>
        <input
          type="text"
          name="title"
          value={@filters.title}
          placeholder="e.g., Elixir, Backend"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">
          Company
        </label>
        <input
          type="text"
          name="company"
          value={@filters.company}
          placeholder="e.g., Google, Microsoft"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">
          Location
        </label>
        <input
          type="text"
          name="area"
          value={@filters.area}
          placeholder="e.g., Moscow, Remote"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
    </form>
  </div>
  
<!-- Jobs Stream -->
  <div class="bg-white rounded-lg shadow overflow-hidden">
    <div class="px-6 py-4 bg-gray-50 border-b">
      <h2 class="text-lg font-semibold text-gray-900">
        Latest Jobs ({length(@jobs)} filtered from {length(@all_jobs)} total)
      </h2>
    </div>

    <div
      id="jobs-container"
      class="divide-y divide-gray-200 max-h-96 overflow-y-auto"
      phx-hook="ScrollControl"
    >
      <%= for job <- @jobs do %>
        <div class={[
          "p-4 transition animate-slide-in",
          MapSet.member?(@selected_jobs, job.id) && "bg-purple-50 border-l-4 border-purple-500",
          !MapSet.member?(@selected_jobs, job.id) && "hover:bg-gray-50"
        ]}>
          <div class="flex items-start gap-3">
            <div class="flex-shrink-0 pt-1">
              <input
                type="checkbox"
                checked={MapSet.member?(@selected_jobs, job.id)}
                phx-click="toggle_job_selection"
                phx-value-job_id={job.id}
                class="w-5 h-5 text-purple-600 border-gray-300 rounded focus:ring-purple-500 cursor-pointer"
              />
            </div>
            <div class="flex-1">
              <h3 class="text-lg font-medium text-blue-600 hover:underline">
                <a href={job.url} target="_blank">{job.title}</a>
              </h3>
              <p class="text-gray-600">{job.company}</p>
              <div class="flex gap-4 mt-1 text-sm text-gray-500">
                <span>üìç {job.area}</span>
                <span>üí∞ {job.salary}</span>
              </div>
            </div>
            <span class="text-xs text-gray-400">
              {format_time(job.created_at)}
            </span>
          </div>
        </div>
      <% end %>
    </div>
  </div>
  
<!-- Performance Metrics -->
  <div class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
    <div class="p-4 bg-gray-50 rounded-lg">
      <h3 class="text-sm font-medium text-gray-700 mb-2">
        <.icon name="hero-chart-bar" class="w-4 h-4 inline-block mr-1" /> Performance Metrics
      </h3>
      <div class="text-xs text-gray-600 space-y-1">
        <div>Last fetch duration: {@stats.last_duration}ms</div>
        <div>Average RPS: {calculate_avg_rps(@stats)}</div>
        <div>Jobs per fetch: {calculate_avg_jobs(@stats)}</div>
      </div>
    </div>

    <div class="p-4 bg-gray-50 rounded-lg">
      <h3 class="text-sm font-medium text-gray-700 mb-2">
        <.icon name="hero-shield-check" class="w-4 h-4 inline-block mr-1" /> Rate Limiter Stats
      </h3>
      <div class="text-xs text-gray-600 space-y-1">
        <div>
          Requests allowed: {Map.get(@rate_limiter_stats, :requests_allowed, 0)}
        </div>
        <div>
          Requests denied: {Map.get(@rate_limiter_stats, :requests_denied, 0)}
        </div>
        <div>
          Utilization: {Map.get(@rate_limiter_stats, :utilization, 0)}%
        </div>
      </div>
    </div>
  </div>
</div>
